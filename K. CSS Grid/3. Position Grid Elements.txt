Reviewing tracks: 

- When we define a grid using grid-template, we define the TRACKS the grid wil have
    - A grid track is any single row or column on a grid 

Example: 

- If we wanted to create a 3x3 grid with 100px rows and 100px cols: 
    - Define 3 horizontal tracks with a height of 100px and three vertical tracks with a width of 100px 

.container {
    display: grid;
    grid-template-rows: 100px 100px 100px;
    grid-template-columns: 100px 100px 100px;
}

Lines: 

- Whenever grid tracks are created, grid lines are created implicitly 
    - They cannot be created explicitly 
- Every track has a start line and an end line and the lines are numbered from left to right and from top to bottom starting at 1
    - Our 3x3 grid above has vertical lines for columns ranging from 1-4 and horizontal lines for rows ranging from 1 to 4

- Can view these lines in DevTools: 
    - Navigate to Layout pane and find the Grid overlay display settings
    - Ensure that 'show line numbers' is enabled 

Cells:

- Smallest unit of measurement in a grid
    - Each child element of a grid container will occupy one cell 

Positioning: 

- We can change the order of our grid items or tell items to occupy more than one cell 
- Using grid-column-start and grid-column-end we can specify what columns we want a specific cell to start and end 
    - The same can be done with grid-row-start and grid-row-end
- We can also use the shorthand property for these: grid-column and grid-row with a slash between the two values (start / end)

Grid area: 

- There is an even shorter shorthand for positioning grid items with start and end lines
    - We can combine grid-row-start / grid-column-start / grid-row-end / grid-column-end into grid-area \

.class{
    grid-area: 1 / 1 / 3 / 6;
}

- grid-area can also be used in a different way using words
    - We assign a grid-area value to each grid item using grid-area
    - We can then map out the whole grid structure with the grid-template-areas property on the container


.container {
    display: inline-grid;
    grid-template: 40px 40px 40px 40px 40px / 40px 40px 40px 40px 40px;
    grid-template-areas:
        "living-room living-room living-room living-room living-room"
        "living-room living-room living-room living-room living-room"
        "bedroom bedroom bathroom kitchen kitchen"
        "bedroom bedroom bathroom kitchen kitchen"
        "closet closet bathroom kitchen kitchen"    
}

#living-room {
    grid-area:  living-room;
}

#kitchen {
    grid-area: kitchen;
}

#bedroom {
    grid-area: bedroom;
}

#bathroom {
    grid-area: bathroom;
}

#closet {
    grid-area: closet;
}

- We can also use . to indicate empty cells

#####################################################################

Knowledge Check: 

Explain the difference between a track and a line.
- The grid track is between the grid lines, the track is the row or column, the line is on each side of a track

What is the smallest unit on a grid?
- The cell

What kind of value do we give to the grid-column-start or grid-column-end properties?
- Numbers that represent the grid lines that the column should start and end on

Which property can we use to combine all the start and end values for a grid item?
- grid-area

Which grid container property can map out a visual structure of grid items?
- grid-template-areas 